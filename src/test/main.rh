
// library pthread {
//     fn create-thread (int ptr int -> int)
// }

fn main {
    1 2 add-intrinsic
    3 eq if {
        "YES"
    } else {
        "NO"
    }
    ~
}

fn add-intrinsic (int int -> int) {
    add
}

// fn foo-array (-> int 4 array) {
//     0 4 array:from-default
//     1 2 3 4 array:from-4
//     1 2 3 4 4 array:from-n
// }
// 
// fn foo-slice (-> int slice) {
//     foo-array
//     slice:from-array
//     ptr:null 10 slice:from-parts
//     0 4 list:from-default
// }
// 
// fn foo-tuple (-> int bool 2 tuple) {
//     42 true tuple:from-2
//     42 true 2 tuple:from-n
// }

